@model API.Models.User

@{
    ViewBag.Title = "Edit";
}
<div class="container">
    <h2>Edit</h2>
    <div>

        <div class="container ">
            <div class="container-fluid " id="BackgroundImage" onclick="openBackgroundSelect()" style="background-image: url(/PhotoFiles/@Model.BackgroundPictureURL ); height: 200px">
            </div>
            <div class="container-fluid" style="background-color:black">
                <div class="row">
                    <div class="col-md-2 col-sm-1">
                        <img class="img-circle" style="margin-top:10px" id="ProfileImage" onclick="openProfileSelect()" src="~/PhotoFiles/@Model.ProfilePictureURL" height="100" width="100" data-holder-rendered="true">
                    </div>
                    <div class="col-md-4 col-sm-3" style="padding:20px">
                        <h2 style="color:white">@Model.Username</h2>
                        <h5 style="color:white">@Model.Subscribers Subs</h5>
                    </div>
                    <div class="col-md-4 col-sm-3" style="padding:20px">

                    </div>

                </div>
            </div>
        </div>


    </div>

    @using (Html.BeginForm("Edit", "Users", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

<div class="form-horizontal container-fluid">

    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    <div class="form-group">
        @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        </div>
    </div>
    <input type="file" class="hidden" id="ProfileImageInput" name="ProfilePicture" accept="image/png, image/jpeg">
    <input type="file" class="hidden" id="BackgroundImageInput" name="BackgroundPicture" accept="image/png, image/jpeg">

    <div class="form-group">
        @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
        </div>
    </div>

    @Html.HiddenFor(model => model.ProfilePictureURL)
    @Html.HiddenFor(model => model.BackgroundPictureURL)


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
    }



    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
    <script>
        function openProfileSelect()
        {
            document.getElementById("ProfileImageInput").click()
        }
        function openBackgroundSelect() {
            document.getElementById("BackgroundImageInput").click()
        }
        const image_input1 = document.querySelector("#ProfileImageInput");

        image_input1.addEventListener("change", function () {
            const reader = new FileReader();
            reader.addEventListener("load", () => {
                const uploaded_image = reader.result;
                document.querySelector("#ProfileImage").src = uploaded_image;
            });
            reader.readAsDataURL(this.files[0]);
        });

        const image_input2 = document.querySelector("#BackgroundImageInput");

        image_input2.addEventListener("change", function () {
            const reader = new FileReader();
            reader.addEventListener("load", () => {
                const uploaded_image = reader.result;
                document.querySelector("#BackgroundImage").style.backgroundImage = `url(${uploaded_image})`;
            });
            reader.readAsDataURL(this.files[0]);
        });
    </script>

</div>
